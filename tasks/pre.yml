---
- name: Debian family pre tasks
  become: true
  when:
    - ansible_os_family == "Debian"
  block:
    - name: Install python-pexpect
      ansible.builtin.apt:
        name: python-pexpect
        state: present
        update_cache: true
      when:
        - ansible_python.version.major <= 2

    - name: Install python3-pexpect
      ansible.builtin.apt:
        name: python3-pexpect
        state: present
        update_cache: true
      when:
        - ansible_python.version.major >= 3

- name: RedHat family pre tasks
  become: true
  when:
    - ansible_os_family == "RedHat"
  block:
    - name: Update subscription info on RHEL
      ansible.builtin.command:
        cmd: subscription-manager refresh --force
      changed_when: false
      when: ansible_distribution == "RedHat"

    - name: RedHat family EPEL installation
      ansible.builtin.dnf:
        name: epel-release
        state: present
        update_cache: true
      when: >
        (not (ansible_distribution == "Fedora" or
        ansible_distribution == "RedHat"))

    - name: Install python2-rpm
      ansible.builtin.dnf:
        name: python2-rpm
        state: present
      when:
        - ansible_python.version.major <= 2

    - name: Install python3-rpm
      ansible.builtin.dnf:
        name: python3-rpm
        state: present
      when:
        - ansible_python.version.major >= 3

- name: Install python3-passlib
  become: true
  ansible.builtin.package:
    name: python3-passlib
    state: present
  register: python3_passlib
  failed_when:
    - python3_passlib.rc is defined
    - python3_passlib.rc != 0
    - not ansible_distribution == "AlmaLinux"

- name: Install Python pip passlib
  become: true
  when:
    - python3_passlib.rc is defined
    - python3_passlib.rc != 0
  block:
    - name: Python3-pip installation
      ansible.builtin.package:
        name: python3-pip
        state: present

    - name: Pip passlib installation
      ansible.builtin.pip:
        name: passlib
        state: present

- name: EFI or UEFI booting check
  ansible.builtin.set_fact:
    booted_with_efi: "{{ ansible_mounts | selectattr('mount', 'equalto', '/boot/efi') | list | length > 0 }}"
