---
- name: Get installed sshd version
  environment:
    PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin/
  ansible.builtin.command:
    cmd: sshd -V
  changed_when: false
  failed_when: false
  check_mode: false
  register: sshd_version
  tags:
    - sshd
    - sshd_config

- name: Set ssh version as fact
  ansible.builtin.set_fact:
    ssh_installed_version: "{{ sshd_version.stderr_lines | regex_search('OpenSSH_([0-9+].[0-9]+)', '\\1') | first }}"
  tags:
    - sshd
    - sshd_config

- name: Ensure privilege separation directory exists
  become: true
  ansible.builtin.file:
    path: /run/sshd
    owner: root
    group: root
    state: directory
    mode: "0755"
  when:
    - ansible_virtualization_type in ["container", "docker", "podman"]
  tags:
    - sshd
    - sshd_config

- name: Stat sysconfig sshd configuration
  ansible.builtin.stat:
    path: /etc/sysconfig/sshd
  register: sysconfig_sshd
  tags:
    - sshd
    - sshd_config
    - M1041

- name: Remove sshd system crypto policy
  become: true
  ansible.builtin.lineinfile:
    dest: /etc/sysconfig/sshd
    state: absent
    regexp: ^\s*CRYPTO_POLICY.*$
  when:
    - sysconfig_sshd.stat.exists
  tags:
    - sshd
    - CCE-80939-2
    - M1041

- name: Get sshd Include config
  become: true
  ansible.builtin.command:
    cmd: grep -E "^Include " /etc/ssh/sshd_config
  register: grep_include
  changed_when: false
  failed_when: false
  check_mode: false
  tags:
    - sshd
    - sshd_config
    - M1041

- name: Check if sshd_config.d exits
  ansible.builtin.stat:
    path: /etc/ssh/sshd_config.d
  register: sshd_config_d
  tags:
    - sshd
    - sshd_config
    - M1041

- name: Clear pre-existing custom configurations in /etc/ssh/sshd_config.d
  when:
    - sshd_config_d_force_clear | bool
    - sshd_config_d.stat.exists
  tags:
    - sshd
    - sshd_config
  block:
    - name: Search pre-existing custom configurations in /etc/ssh/sshd_config.d
      become: true
      ansible.builtin.find:
        path: /etc/ssh/sshd_config.d
        patterns: "*"
      register: sshd_config_d_content

    - name: Clear pre-existing custom configurations in /etc/ssh/sshd_config.d
      become: true
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ sshd_config_d_content.files }}"

- name: Ensure /etc/ssh/sshd_config permissions
  become: true
  ansible.builtin.file:
    path: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: "0600"
  tags:
    - sshd
    - sshd_config

- name: SSH moduli file
  become: true
  when:
    - sshd_update_moduli
  block:
    - name: Stat moduli file
      ansible.builtin.stat:
        path: /etc/ssh/moduli
      register: ssh_moduli

    - name: Update moduli file
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/konstruktoid/ssh-moduli/main/moduli
        dest: "{{ '/etc/ssh/' if ssh_moduli.stat.exists else '/etc/' }}"
        owner: root
        group: root
        mode: "0644"

- name: Find DSA host files
  become: true
  ansible.builtin.find:
    paths: /etc/ssh
    patterns: "*_host_dsa_key*"
  register: dsa_files

- name: Remove DSA host files
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: absent
  loop: "{{ dsa_files.files }}"

- name: Set default for sshd_host_keys_files if not supplied
  become: true
  when:
    - not sshd_host_keys_files
  tags:
    - sshd
  block:
    - name: Generate SSH RSA keypair
      community.crypto.openssh_keypair:
        state: present
        type: rsa
        size: "{{ sshd_required_rsa_size }}"
        path: /etc/ssh/ssh_host_rsa_key
        regenerate: partial_idempotence

    - name: Generate SSH ECDSA keypair
      community.crypto.openssh_keypair:
        state: present
        type: ecdsa
        size: "{{ sshd_required_ecdsa_size }}"
        path: /etc/ssh/ssh_host_ecdsa_key
        regenerate: partial_idempotence
      when:
        - ssh_installed_version is version('6.0', '>=')

    - name: Generate SSH Ed25519 keypair
      community.crypto.openssh_keypair:
        state: present
        type: ed25519
        path: /etc/ssh/ssh_host_ed25519_key
        regenerate: partial_idempotence
      when:
        - ssh_installed_version is version('6.5', '>=')

    - name: Set hostkeys according to openssh-version if openssh >= 5.3
      ansible.builtin.set_fact:
        sshd_host_keys_files:
          - /etc/ssh/ssh_host_rsa_key
      when:
        - ssh_installed_version is version('5.3', '>=')
        - ssh_installed_version is version('6.0', '<')

    - name: Set hostkeys according to openssh-version if openssh >= 6.0
      ansible.builtin.set_fact:
        sshd_host_keys_files:
          - /etc/ssh/ssh_host_rsa_key
          - /etc/ssh/ssh_host_ecdsa_key
      when:
        - ssh_installed_version is version('6.0', '>=')
        - ssh_installed_version is version('6.5', '<')

    - name: Set hostkeys according to openssh-version if openssh >= 6.5
      ansible.builtin.set_fact:
        sshd_host_keys_files:
          - /etc/ssh/ssh_host_rsa_key
          - /etc/ssh/ssh_host_ecdsa_key
          - /etc/ssh/ssh_host_ed25519_key
      when:
        - ssh_installed_version is version('6.5', '>=')

- name: Disable PAM dynamic MOTD
  become: true
  community.general.pamd:
    name: sshd
    type: session
    control: optional
    module_path: pam_motd.so
    state: absent
    backup: true
  when:
    - sshd_use_pam | bool
    - not (sshd_print_pam_motd | bool)
  tags:
    - sshd

- name: Check variable sshd_config_force_replace
  ansible.builtin.set_fact:
    sshd_config_force_replace: true
  when: >
    sshd_match_users | length > 0 or
    sshd_match_groups | length > 0 or
    sshd_match_addresses | length > 0 or
    sshd_match_local_ports | length > 0 or
    (sshd_sftp_only_group is defined and sshd_sftp_only_group | length != 0)

- name: Configure sshd
  become: true
  ansible.builtin.template:
    src: "{{ sshd_config_template }}"
    dest: /etc/ssh/sshd_config
    backup: true
    mode: "0600"
    owner: root
    group: root
    validate: /usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -C lport=22 -f %s
  when: >
    (sshd_config_force_replace | bool) or
    (not sshd_config_d.stat.exists) or
    (grep_include.rc != 0)
  notify:
    - Restart sshd service
    - Restart ssh service
  tags:
    - sshd
    - sshd_config
    - CCE-80895-6
    - CCE-80896-4
    - CCE-80897-2
    - CCE-80898-0
    - CCE-80901-2
    - CCE-80902-0
    - CCE-80903-8
    - CCE-80904-6
    - CCE-80905-3
    - CCE-80906-1
    - CCE-82177-7
    - CCE-82281-7
    - CCE-83360-8
    - CIS-UBUNTU2004-5.3.1
    - CIS-UBUNTU2004-5.3.4
    - CIS-UBUNTU2004-5.3.5
    - CIS-UBUNTU2004-5.3.6
    - CIS-UBUNTU2004-5.3.7
    - CIS-UBUNTU2004-5.3.8
    - CIS-UBUNTU2004-5.3.9
    - CIS-UBUNTU2004-5.3.10
    - CIS-UBUNTU2004-5.3.11
    - CIS-UBUNTU2004-5.3.12
    - CIS-UBUNTU2004-5.3.13
    - CIS-UBUNTU2004-5.3.14
    - CIS-UBUNTU2004-5.3.15
    - CIS-UBUNTU2004-5.3.16
    - CIS-UBUNTU2004-5.3.17
    - CIS-UBUNTU2004-5.3.18
    - CIS-UBUNTU2004-5.3.19
    - CIS-UBUNTU2004-5.3.20
    - CIS-UBUNTU2004-5.3.21
    - CIS-UBUNTU2004-5.3.22
    - M1041
    - UBTU-20-010036
    - UBTU-20-010037

- name: Configure sshd using sshd_config.d
  become: true
  ansible.builtin.template:
    src: "{{ sshd_config_template }}"
    dest: /etc/ssh/sshd_config.d/01-hardening.conf
    backup: true
    mode: "0600"
    owner: root
    group: root
    validate: /usr/sbin/sshd -T -C user=root -C host=localhost -C addr=localhost -C lport=22 -f %s
  when:
    - not (sshd_config_force_replace | bool)
    - sshd_config_d.stat.exists
    - grep_include.rc == 0
  notify:
    - Restart sshd service
    - Restart ssh service
  tags:
    - sshd
    - sshd_config
    - CCE-80895-6
    - CCE-80896-4
    - CCE-80897-2
    - CCE-80898-0
    - CCE-80901-2
    - CCE-80902-0
    - CCE-80903-8
    - CCE-80904-6
    - CCE-80905-3
    - CCE-80906-1
    - CCE-82177-7
    - CCE-82281-7
    - CCE-83360-8
    - CIS-UBUNTU2004-5.3.1
    - CIS-UBUNTU2004-5.3.4
    - CIS-UBUNTU2004-5.3.5
    - CIS-UBUNTU2004-5.3.6
    - CIS-UBUNTU2004-5.3.7
    - CIS-UBUNTU2004-5.3.8
    - CIS-UBUNTU2004-5.3.9
    - CIS-UBUNTU2004-5.3.10
    - CIS-UBUNTU2004-5.3.11
    - CIS-UBUNTU2004-5.3.12
    - CIS-UBUNTU2004-5.3.13
    - CIS-UBUNTU2004-5.3.14
    - CIS-UBUNTU2004-5.3.15
    - CIS-UBUNTU2004-5.3.16
    - CIS-UBUNTU2004-5.3.17
    - CIS-UBUNTU2004-5.3.18
    - CIS-UBUNTU2004-5.3.19
    - CIS-UBUNTU2004-5.3.20
    - CIS-UBUNTU2004-5.3.21
    - CIS-UBUNTU2004-5.3.22
    - M1041
    - UBTU-20-010036
    - UBTU-20-010037

- name: Remove possible Subsystem duplicate
  become: true
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: ^Subsystem.*
    state: absent
  when:
    - not (sshd_config_force_replace | bool)
    - sshd_config_d.stat.exists
    - grep_include.rc == 0
  tags:
    - sshd
    - sshd_config

- name: Stat sshd host keys
  become: true
  ansible.builtin.find:
    paths: /etc/ssh
    file_type: file
    patterns: ssh_host_*
    excludes: "*.pub"
  register: ssh_host_keys
  tags:
    - sshd
    - M1022
    - M1041

- name: Set sshd host key permissions
  become: true
  ansible.builtin.file:
    owner: "{{ sshd_host_keys_owner }}"
    group: "{{ sshd_host_keys_group }}"
    mode: "{{ sshd_host_keys_mode }}"
    path: "{{ item.path }}"
  loop: "{{ ssh_host_keys.files }}"
  loop_control:
    label: "{{ item.path }}"
  tags:
    - sshd
    - CCE-82424-3
    - CIS-UBUNTU2004-5.3.2
    - M1022
    - M1041

- name: Check if ssh_config.d exits
  ansible.builtin.stat:
    path: /etc/ssh/ssh_config.d
  register: ssh_config_d
  tags:
    - ssh
    - ssh_config
    - M1041

- name: Configure ssh client
  become: true
  ansible.builtin.template:
    src: "{{ ssh_config_template }}"
    dest: /etc/ssh/ssh_config
    backup: true
    mode: "0644"
    owner: root
    group: root
  tags:
    - ssh
    - ssh_config
    - CCE-82880-6
    - M1041
